{"ast":null,"code":"var _jsxFileName = \"/home/bap/Desktop/tracNghiem/app_contacts/src/app/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { routes } from \"../routes\";\nimport { Button, notification } from 'antd';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const key = 'updatable';\n  const value = useSelector(state => state.contacts);\n  console.log(\"value\", value);\n\n  const _renderRouters = routes => {\n    return routes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      path: route.path,\n      exact: route.exact,\n      render: props => /*#__PURE__*/_jsxDEV(route.component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 27\n      }, this)\n    }, route.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 34\n    }, this));\n  };\n\n  const openNotification = () => {\n    notification.success({\n      key,\n      message: 'Notification Title',\n      description: 'description.'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: openNotification,\n      children: \"Open the notification box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: _renderRouters(routes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"p3faWim7/O6OZUiIjUprTSJvqsY=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bap/Desktop/tracNghiem/app_contacts/src/app/App.js"],"names":["BrowserRouter","Router","Switch","Route","routes","Button","notification","useSelector","App","key","value","state","contacts","console","log","_renderRouters","map","route","path","exact","props","title","openNotification","success","message","description"],"mappings":";;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,MAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,GAAG,GAAG,WAAZ;AAEA,QAAMC,KAAK,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAzB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;;AAEA,QAAMK,cAAc,GAAIX,MAAD,IAAY;AACjC,WAAOA,MAAM,CAACY,GAAP,CAAYC,KAAD,iBAAW,QAAC,KAAD;AAE7B,MAAA,IAAI,EAAEA,KAAK,CAACC,IAFiB;AAG7B,MAAA,KAAK,EAAGD,KAAK,CAACE,KAHe;AAI7B,MAAA,MAAM,EAAMC,KAAD,iBAAW,QAAC,KAAD,CAAO,SAAP,OAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA;AAJO,OACxBH,KAAK,CAACI,KADkB;AAAA;AAAA;AAAA;AAAA,YAAtB,CAAP;AAMD,GAPD;;AASA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BhB,IAAAA,YAAY,CAACiB,OAAb,CAAqB;AACnBd,MAAAA,GADmB;AAEnBe,MAAAA,OAAO,EAAE,oBAFU;AAGnBC,MAAAA,WAAW,EAAE;AAHM,KAArB;AAKD,GAND;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEH,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,kBACIP,cAAc,CAACX,MAAD;AADlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAtCQI,G;UAGOD,W;;;KAHPC,G;AAwCT,eAAeA,GAAf","sourcesContent":["import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { routes } from \"../routes\"\nimport { Button, notification } from 'antd';\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const key = 'updatable';\n  \n  const value = useSelector(state => state.contacts)\n\n  console.log(\"value\", value)\n\n  const _renderRouters = (routes) => {\n    return routes.map((route) => <Route \n    key={route.title}\n    path={route.path}\n    exact={ route.exact }\n    render = { (props) => <route.component { ...props }/> }/>\n    )\n  }\n\n  const openNotification = () => {\n    notification.success({\n      key,\n      message: 'Notification Title',\n      description: 'description.',\n    })\n  };\n  \n\n\n  return (\n    <div className=\"App\">\n      <Button type=\"primary\" onClick={openNotification}>\n        Open the notification box\n      </Button>\n      <Router>\n        <Switch>\n          { _renderRouters(routes) }\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}